import os
import hashlib
import shutil
import tkinter as tk
from tkinter import filedialog
from tkinter import messagebox
import threading
import queue

# Function to calculate the hash of a file
def file_hash(filepath):
    with open(filepath, 'rb') as f:
        hasher = hashlib.md5()
        buf = f.read(65536)
        while len(buf) > 0:
            hasher.update(buf)
            buf = f.read(65536)
        return hasher.hexdigest()

# Function to find duplicate videos in a directory and its subdirectories
def find_duplicate_videos(directory, queue):
    video_extensions = ['.mp4', '.mkv', '.avi', '.mov', '.flv', '.wmv', '.webm']
    hashes = {}
    duplicates = []
    for root, dirs, files in os.walk(directory):
        for filename in files:
            if os.path.splitext(filename)[1].lower() in video_extensions:
                filepath = os.path.join(root, filename)
                file_hash_value = file_hash(filepath)
                if file_hash_value in hashes:
                    duplicates.append((filepath, hashes[file_hash_value]))
                else:
                    hashes[file_hash_value] = filepath
    queue.put(duplicates)

# Function to delete a file
def delete_file(filepath):
    try:
        os.remove(filepath)
        return True
    except:
        return False

# Function to move a file to another directory
def move_file(filepath, target_dir):
    try:
        shutil.move(filepath, target_dir)
        return True
    except:
        return False

# Function to display a message box with the list of duplicate videos and the option to delete or move them
def show_duplicates(duplicates):
    if len(duplicates) == 0:
        messagebox.showinfo('Duplicate Videos', 'No duplicate videos found.')
    else:
        message = 'The following duplicate videos were found:\n\n'
        for pair in duplicates:
            message += pair[0] + '\n' + pair[1] + '\n\n'
        message += 'Do you want to delete or move them to another folder?'
        result = messagebox.askyesnocancel('Duplicate Videos', message)
        if result == True: # Delete the duplicate videos
            for pair in duplicates:
                if delete_file(pair[0]):
                    messagebox.showinfo('Duplicate Videos', 'Deleted: ' + pair[0])
                else:
                    messagebox.showerror('Duplicate Videos', 'Failed to delete: ' + pair[0])
        elif result == False: # Move the duplicate videos
            target_dir = filedialog.askdirectory()
            if target_dir:
                for pair in duplicates:
                    if move_file(pair[0], target_dir):
                        messagebox.showinfo('Duplicate Videos', 'Moved: ' + pair[0])
                    else:
                        messagebox.showerror('Duplicate Videos', 'Failed to move: ' + pair[0])

# Function to select a directory using a file dialog
def select_directory():
    directory = filedialog.askdirectory()
    if directory:
        duplicates = []
        q = queue.Queue()
        t = threading.Thread(target=find_duplicate_videos, args=(directory, q))
        t.start()
        while t.is_alive():
            root.update()
        duplicates = q.get()
        show_duplicates(duplicates)

# Create the GUI
root = tk.Tk()
root.title('Duplicate Video Finder')
root.geometry('400x200')

# Create the directory selection button
button = tk.Button(root, text='Select Directory', command=select_directory)
button.pack(pady=20)

# Start the GUI event loop
root.mainloop()
